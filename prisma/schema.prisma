// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// 1. データソースの設定
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 2. Prisma Clientの生成設定
generator client {
  // ★★★ 変更点: providerを正しい名前に修正 ★★★
  provider = "prisma-client-js"
}

// 3. データベースモデルの定義

// Clerkと連携するUserモデル
model User {
  id            Int      @id @default(autoincrement())
  clerk_user_id String   @unique @map("clerk_user_id") // DBのカラム名とマッピング
  name          String
  email         String   @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  tasks         Task[]   // Userは複数のTaskを持つ (リレーション)
}

// タスクのステータスモデル
model TaskStatus {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tasks Task[] // TaskStatusは複数のTaskを持つ (リレーション)

  @@map("task_statuses") // テーブル名をDBと一致させる
}

// タスクモデル
model Task {
  id          Int       @id @default(autoincrement())
  user_id     Int
  title       String
  description String?   // ? はNULLを許容するオプショナルなフィールド
  status_id   Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  tags        Json      @default("[]")
  limited_at  DateTime?

  // リレーションの定義
  user   User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  status TaskStatus? @relation(fields: [status_id], references: [id], onDelete: SetNull)

  @@map("tasks") // テーブル名をDBと一致させる
}
